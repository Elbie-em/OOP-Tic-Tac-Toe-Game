#!/usr/bin/env ruby
# rubocop:disable Style/CaseEquality
# rubocop:disable Metrics/CyclomaticComplexity
# rubocop:disable Metrics/MethodLength
# rubocop:disable Style/GlobalVars
# Game Boards
logo_board = [['1', '|', '2', '|', '3'], ['4', '|', '5', '|', '6'], ['7', '|', '8', '|', '9']]
instr_board = [['X', '|', ' ', '|', ' '], [' ', '|', ' ', '|', 'O'], [' ', '|', ' ', '|', ' ']]
game_board = [[' ', '|', ' ', '|', ' '], [' ', '|', ' ', '|', ' '], [' ', '|', ' ', '|', ' ']]

def print_game_board(board)
  board.each do |row|
    print ''.center(15)
    row.each do |column|
      print column
    end
    puts
  end
end

def choose_option(option)
  loop do
    option.capitalize!
    if option === 'Y'
      p 'Game is ON!'
      break
    elsif option === 'N'
      p 'Thank you. See you next time.'
      exit
    else
      p 'Wrong option! Please select Y or N.'
    end
  end
end

def player_turn(board, index, player)
  param = ''

  if player === $player_one
    param = 'X'
  elsif player === $player_two
    param = 'O'
  end

  case index
  when 1
    board[0][0] = param
  when 2
    board[0][2] = param
  when 3
    board[0][4] = param
  when 4
    board[1][0] = param
  when 5
    board[1][2] = param
  when 6
    board[1][4] = param
  when 7
    board[2][0] = param
  when 8
    board[2][2] = param
  when 9
    board[2][4] = param
  end
end

def won?
  false
end

def move_done?
  false
end

def test_play?(play_made)
  play_made >= 1 && play_made <= 9 ? true : false
end

puts 'TIC-TAC-TOE GAME'.center(40)
puts 'Developed by Elbie and Rafael'.center(40)
print_game_board(logo_board)
puts
puts 'Do you want to play?'
puts 'Type Y for Yes and Type N for No'

starting_option = gets.chomp
choose_option(starting_option)

# User will choose if he wants to play or not
# The program will keep asking for an option that is valid
# either to start the game or to end it.

print "Players' move should correspond to number positions in the board shown above.\n\n"
puts 'e.g if player is X and plays 1, X is placed in position 1'
puts 'e.g if player is O and plays 6, O is placed in position 6'
print_game_board(instr_board)
puts 'Do you want to continue?'
puts 'Type Y for Yes and Type N for No'

continue_option = gets.chomp
choose_option(continue_option)

# Game started - It asks for the Players Names.

puts 'Player, what is your name?'
$player_one = gets.chomp
puts 'What is the name of your rival?'
$player_two = gets.chomp

# Description of player & Pieces to take

print "\nThe game will be #{$player_one} versus #{$player_two}\n"

print_game_board(game_board)
count = 0
loop do
  p 'Player one move'
  p1_move = Integer(gets.chomp)
  p 'Checking if move is valid'
  p 'Invalid Move! Try Again' unless test_play?(p1_move)
  p 'This move has already been done! Try Again!' if move_done?
  player_turn(game_board, p1_move, $player_one)
  print_game_board(game_board)
  p won? ? "#{$player_one} has won!" : ''
  count += 1
  break if count == 9

  p 'Player two move'
  p2_move = Integer(gets.chomp)
  p 'Checking if move is valid'
  p 'Invalid Move! Try Again' if test_play?(p2_move)
  p 'This move has already been done! Try Again!' if move_done?
  player_turn(game_board, p2_move, $player_two)
  print_game_board(game_board)
  p won? ? "#{$player_two} has won!" : ''

  count += 1
  break if count == 9
end
# The logic will set 0 if it is a draw, 1 if player_one won and 2 if player_two won
# In the example, the match will draw, so:

winner = 0

case winner
when 0
  p 'Match Draw!'
when 1
  p "#{$player_one} has won this round!"
when 2
  p "#{$player_two} has won this round!"
end

puts 'Would you like another round? Y or N?'
choose_option('N')

# rubocop:enable Style/CaseEquality
# rubocop:enable Metrics/CyclomaticComplexity
# rubocop:enable Metrics/MethodLength
# rubocop:enable Style/GlobalVars
